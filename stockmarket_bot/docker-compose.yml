services:
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: python manage.py runserver 0.0.0.0:8000
  #   # command: bash -c "pip install debugpy -t /tmp && python manage.py migrate && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000"
  #   volumes:
  #     - .:/app
  #     - tensorboard_logs:/logs  # Mount the shared volume
  #   ports:
  #     - "8000:8000"
  #     - "5678:5678"
  #   container_name: web
  #   depends_on:
  #     # - redis
  #     - db
  #     - historical_db
  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #   ports:
  #     - "8081:8081"
  #   container_name: redis
  #   depends_on:
  #     - redis
  # celery:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A stockmarket_bot worker -l info --uid nobody
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - redis
  #     - db
  #     - web
  # celery-beat:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A stockmarket_bot beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   volumes:
  #     - .:/app
  #   container_name: celery_beat
  #   depends_on:
  #     - redis
  #     - db
  #     - web
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
  historical_db:
    image: timescale/timescaledb:latest-pg13
    environment:
      - POSTGRES_DB=historical_database
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - "5433:5432"
    container_name: historical_db
    volumes:
      - historical_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  # tensorboard:
  #   image: tensorflow/tensorflow:latest-py3
  #   command: tensorboard --logdir=/logs --host=0.0.0.0
  #   volumes:
  #     - tensorboard_logs:/logs  # Mount the shared volume
  #   ports:
  #     - "6006:6006"
  #   container_name: tensorboard
    
volumes:
  postgres_data:
  historical_data:
  tensorboard_logs: