-----sometimes .get() returns more than one object -> clean DB and make code robust against this problem
    self.initial_prices = self.get_initial_crypto_prices()
  File "/app/coinbase_api/ml_models/data_handlers/simulation_data_handler.py", line 48, in get_initial_crypto_prices
    values[crypto_model.symbol] = crypto_model.objects.using(Database.HISTORICAL.value).filter(timestamp=self.timestamp).get().close

-----add way to hold onto crypto, maybe step function which is hold below 0.5, full buy possible above 0.5

-----re-add reward calculation metric which takes into account short term gains (between 10 and 24 hours)

-----during training output: additional information

-----build a pool of x random timeframes, then pull from that pool until is is empty. when empty, recreate pool.
-----    -> necessary for permanent flow using the other pc

-----refactor into pd dataframe the whole time. only need one more column on each step, and not re-fetch the whole lstm sequence length

somehow the total value sometimes jumps a lot, first down and then it recovers quickly. This has to be a bug in the calculations

training without costs